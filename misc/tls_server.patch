--- botan/src/cli/tls_server.cpp	2016-06-15 08:41:29.622076198 +0200
+++ botan/src/cli/tls_server.cpp	2016-06-15 09:00:47.313878458 +0200
@@ -121,31 +121,42 @@
                {
                while(!server.is_closed())
                   {
-                  uint8_t buf[4*1024] = { 0 };
-                  ssize_t got = ::read(fd, buf, sizeof(buf));
-
-                  if(got == -1)
+                  try 
                      {
-                     std::cout << "Error in socket read - " << strerror(errno) << std::endl;
-                     break;
-                     }
+                     uint8_t buf[4*1024] = { 0 };
+                     ssize_t got = ::read(fd, buf, sizeof(buf));
 
-                  if(got == 0)
-                     {
-                     std::cout << "EOF on socket" << std::endl;
-                     break;
-                     }
+                     if(got == -1)
+                        {
+                        std::cout << "Error in socket read - " << strerror(errno) << std::endl;
+                        break;
+                        }
 
-                  server.received_data(buf, got);
+                     if(got == 0)
+                        {
+                        std::cout << "EOF on socket" << std::endl;
+                        break;
+                        }
 
-                  while(server.is_active() && !pending_output.empty())
-                     {
-                     std::string output = pending_output.front();
-                     pending_output.pop_front();
-                     server.send(output);
+                     server.received_data(buf, got);
+
+                     while(server.is_active() && !pending_output.empty())
+                        {
+                        std::string output = pending_output.front();
+                        pending_output.pop_front();
+                        server.send(output);
 
-                     if(output == "quit\n")
-                        server.close();
+                        if(output == "quit\n")
+                           server.close();
+                        }
+                     }
+                  catch(std::exception& e) 
+                     {
+                     std::cout << "Connection1 problem: " << e.what() << std::endl;
+                     if(is_tcp)
+                        {
+                        ::close(fd);
+                        }
                      }
                   }
                }
